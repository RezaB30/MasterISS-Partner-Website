@*@using PagedList.Mvc
@using MasterISS_Partner_WebSite.Localization
@using MasterISS_Partner_WebSite.ViewModels.Setup
@using MasterISS_Partner_WebSite.ViewModels.Setup.Response
@model  PagedList.StaticPagedList<GetTaskListResponseViewModel>
@{
    ViewBag.Title = View.SetupPanel;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var search = ViewBag.Search as GetTaskListRequestViewModel ?? new GetTaskListRequestViewModel();
}

<div align="center">
    @using (Html.BeginForm("Index", "Setup", FormMethod.Get))
    {
        <div class="form-group">
            @Html.LabelFor(m => search.TaskListStartDate)
            @Html.EditorFor(m => search.TaskListStartDate, new { htmlAttributes = new { placeholder = DateTime.Now.ToString("dd.MM.yyyy HH:mm") } })
            @Html.ValidationMessageFor(m => search.TaskListStartDate)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => search.TaskListEndDate)
            @Html.EditorFor(m => search.TaskListEndDate, new { htmlAttributes = new { placeholder = DateTime.Now.ToString("dd.MM.yyyy HH:mm") } })
            @Html.ValidationMessageFor(m => search.TaskListEndDate)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => search.SearchedName)
            @Html.EditorFor(m => search.SearchedName)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => search.SearchedTaskNo)
            @Html.EditorFor(m => search.SearchedTaskNo, new { htmlAttributes = new { type = "text" } })
        </div>

        <input type="submit" class=" btn btn-warning" value="@View.Filter" />
    }
</div>

@Html.Raw(TempData["GetTaskDetailError"])

@if (ViewBag.ValidationError == null && ViewBag.Max30Days == null && ViewBag.StartTimeBiggerThanEndTime == null && ViewBag.ErrorMessage == null)
{
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TaskNo)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().XDSLNo)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ContactName)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TaskIssueDate)</th>
                <th>müşteriyi ara</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Address)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TaskStatus)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TaskType)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ReservationDate)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RendezvousTeamStaffName)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().SetupTeamStaffName)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().FaultCodesDisplayText)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().SetupStaffEnteredMessage)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.TaskNo)</td>
                    <td>@Html.DisplayFor(modelItem => item.XDSLNo)</td>
                    <td>@Html.DisplayFor(modelItem => item.ContactName)</td>
                    <td>@Html.DisplayFor(modelItem => item.TaskIssueDate)</td>
                    <td>@Html.ActionLink("ara", "CallCustomer", new { taskNo = item.TaskNo })</td>
                    <td>@Html.DisplayFor(modelItem => item.Address)</td>
                    <td>@Html.DisplayFor(modelItem => item.TaskStatus)</td>
                    <td>@Html.DisplayFor(modelItem => item.TaskType)</td>
                    <td>@Html.DisplayFor(modelItem => item.ReservationDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.RendezvousTeamStaffName)</td>
                    <td>@Html.DisplayFor(modelItem => item.SetupTeamStaffName)</td>
                    <td>@Html.DisplayFor(modelItem => item.FaultCodesDisplayText)</td>
                    <td>@Html.DisplayFor(modelItem => item.SetupStaffEnteredMessage)</td>

                    @if (User.IsInRole("Admin") || User.IsInRole("RendezvousTeam"))
                    {
                        if (!string.IsNullOrEmpty(item.SetupTeamStaffName) && item.IsCorfirmation == false)
                        {
                            <td>@Html.ActionLink("teyit ver", "GiveConfirmation", "Setup", new { taskNo = item.TaskNo }, null)</td>
                        }
                        if (string.IsNullOrEmpty(item.SetupTeamStaffName))
                        {
                            <td>@Html.ActionLink("kurulum ekibine ata", "ShareSetupStaff", "Setup", new { BBK = item.BBK, taskNo = item.TaskNo }, null)</td>
                        }
                        else
                        {
                            <td>@Html.ActionLink("başka bir kurulum ekibe ata", "ShareSetupStaff", "Setup", new { taskNo = item.TaskNo, BBK = item.BBK }, null)</td>
                        }
                    }
                    @if (User.IsInRole("Admin"))
                    {
                        if (!string.IsNullOrEmpty(item.RendezvousTeamStaffName) && string.IsNullOrEmpty(item.SetupTeamStaffName))
                        {
                            <td>@Html.ActionLink("bu görevi başka bir randevu ekibine ata", "ListPartnerRendezvousTeam", "Setup", new { BBK = item.BBK, taskNo = item.TaskNo }, null)</td>
                        }
                        if (!string.IsNullOrEmpty(item.RendezvousTeamStaffName) && !string.IsNullOrEmpty(item.SetupTeamStaffName))
                        {
                            <td>@Html.ActionLink("Görevi havuza at", "SendTaskToScheduler", "Setup", new { taskNo = item.TaskNo }, null)</td>
                        }
                    }
                    <td>@Html.ActionLink(View.CustomerInfo, "CustomerDetail", "Setup", new { taskNo = item.TaskNo }, new { @class = "btn btn-success" })</td>
                    <td><a href="https://www.google.com/maps/search/?api=1&query=@item.AddressLatitudeandLongitude[0],@item.AddressLatitudeandLongitude[1]" target="_blank">@View.RouteMap</a></td>
                </tr>
            }
        </tbody>
    </table>
    if (Model.TotalItemCount > 0)
    {
        <div>
            @Html.PagedListPager(Model, page => Url.Action("Index", "Setup", new { page }))
        </div>
        <div>
            <span>
                @View.Total @Model.TotalItemCount @View.RecordFound @View.OnThisPage @Model.FirstItemOnPage @View.To @Model.LastItemOnPage @View.Showing
            </span>
        </div>
    }
}
else
{
    <div align="center">
        <div class="text-danger">
            <span>@ViewBag.Max30Days</span>
            <span>@ViewBag.ErrorMessage</span>
            <span>@ViewBag.StartTimeBiggerThanEndTime</span>
        </div>
    </div>
}

@Html.Raw(TempData["SendTaskToSchedulerError"])
@Html.Raw(TempData["GeneralError"])

@section Javascript{
    <script>
        $(function () {
            $("#search_TaskListStartDate").mask("99.99.9999 99:99");
            $("#search_TaskListEndDate").mask("99.99.9999 99:99");
            $("#search_SearchedTaskNo").mask("99999");
        });
    </script>
}*@