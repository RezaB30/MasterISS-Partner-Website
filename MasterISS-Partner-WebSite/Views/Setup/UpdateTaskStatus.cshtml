@using MasterISS_Partner_WebSite.Localization
@using MasterISS_Partner_WebSite.ViewModels.Setup
@model AddTaskStatusUpdateViewModel
@{
    ViewBag.Title = MasterISS_Partner_WebSite.Localization.View.UpdateTaskStatus;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("UpdateTaskStatus", "Setup", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h3>@View.UpdateTaskStatus</h3>

    <div>
        @Html.DropDownListFor(m => m.FaultCodes, (SelectList)ViewBag.FaultTypes, View.SelectFaultType, new { @class = "form-control", id = "FaultCodesDrowndown" })
        @Html.ValidationMessageFor(m => m.FaultCodes, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.EditorFor(m => m.Description)
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    if ((User.IsInRole("SetupManager") && !User.IsInRole("RendezvousTeam")))
    {
        <input type="file" name="file" id="file-button" />
    }

    @Html.ActionLink(View.Back, "CustomerDetail", "Setup", new { taskNo = Model.TaskNo }, new { @class = "btn btn-info", @id = "form-button" })

    if ((User.IsInRole("Admin") || User.IsInRole("RendezvousTeam")) && Model.StaffId != null)
    {
        foreach (var item in Model.StaffCalendar)
        {
            <div><input value="saatlerine bak" name="@item" type="button" class="staff-work-days" /></div>
            <div>@Html.DisplayFor(modelItem => item)</div>
        }
    }
    <div class="staff-work-hours-container"></div>

    <input type="submit" id="form-button" class=" btn btn-warning" value="@View.Update" />

    @Html.HiddenFor(m => m.TaskNo)
    @Html.HiddenFor(m => m.StaffId)
    @Html.HiddenFor(m => m.SelectedDate)
    @Html.HiddenFor(m => m.SelectedTime)
}

@ViewBag.UploadDocumentError

@section JavaScript{
    <script>
        $(document).ready(function () {
            var value = $('#FaultCodesDrowndown').val();
            if (value == '9') {//Rendezvous Made
                $('#RezervationDate').show();
            } else {
                $('#RezervationDate').hide();
            }
        });

        $('#FaultCodesDrowndown').change(function () {
            var value = $(this).val();
            if (value == '9') {//Rendezvous Made
                $('#RezervationDate').show();
            } else {
                $('#RezervationDate').hide();
            }
        });

        $(".staff-work-days").click(function () {

            var getButtonValue = $(this).attr("name");
            var staffId = $("#StaffId").attr("value");
            $("#SelectedDate").attr("value", getButtonValue);
            $("#SelectedTime").attr("value", null);
            $(".staff-work-hours-container").children().remove();

            var postData = { date:getButtonValue , staffId:staffId};

            $.ajax({
                    url: '@Url.Action("GetStaffAvailableHours", "Setup")',
                    type: "POST",
                    dataType: "json",
                    data: postData,
                    complete: function (data, status) {
                        if (status == "success") {
                            var area = $(".staff-work-hours-container");
                            $.each(data.responseJSON.list, function (item,value) {
                                area.append("<input value='" + value + "' name='" + value + "' type='button' class='staff-work-hours'/>");
                            })
                        }
                        else {
                            console.log("Failed Get Staff Hours");
                        }
                    }
                });
        });



        $(".staff-work-hours-container").on('click', '.staff-work-hours', function () {
            var getButtonValue = $(this).attr("name");
            $("#SelectedTime").attr("value", getButtonValue);
        });


    </script>
}