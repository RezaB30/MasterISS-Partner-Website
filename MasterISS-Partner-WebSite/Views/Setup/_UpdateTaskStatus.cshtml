@using MasterISS_Partner_WebSite.Localization
@using MasterISS_Partner_WebSite.ViewModels.Setup
@model AddTaskStatusUpdateViewModel
@{
    ViewBag.Title = MasterISS_Partner_WebSite.Localization.View.UpdateTaskStatus;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="modal-header">
    <div class="py-2">
        <span class="text-dark-75 font-weight-bolder d-block font-size-h5">Kurulum Ekibi Değiştir</span>
        <span class="text-muted font-size-lg">@Html.DisplayFor(m => m.ContactName)</span>
    </div>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki font-size-h5 ki-close"></i>
    </button>
</div>
<div class="modal-body">
    <div data-scroll="true" data-height="300">
        <!--begin::Info-->

        @using (Ajax.BeginForm("UpdateTaskStatus", "Setup", new AjaxOptions { HttpMethod = "POST", OnComplete = "UpdateTaskStatusResult" }))
        {
            foreach (var item in Model.SetupTeamStaffsToMatchedTheTask)
            {
                <div class="mb-7">
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="text-dark-75 font-weight-bolder mr-6">@Html.DisplayNameFor(modelItem => item.SetupTeamStaffName)</span>
                        <a href="#" class="text-info text-hover-primary">@Html.DisplayFor(modelItem => item.SetupTeamStaffName)</a>
                    </div>
                    <div class="d-flex justify-content-between align-items-cente my-1">
                        <span class="text-dark-75 font-weight-bolder mr-2">@Html.DisplayNameFor(modelItem => item.SetupTeamStaffName)</span>
                        @foreach (var workArea in item.SetupTeamStaffWorkAreas)
                        {
                            <a href="#" class="text-info text-hover-primary">@Html.DisplayFor(workAreaItem => workArea.ProvinceName) @Html.DisplayFor(workAreaItem => workArea.DistrictName) @Html.DisplayFor(workAreaItem => workArea.RuralName) @Html.DisplayFor(workAreaItem => workArea.NeigborhoodName) </a>
                        }

                    </div>

                    <div class="col-lg-16 my-8">

                        <span class="form-text text-info my-2">Randevu tarihi seçiniz</span>

                        <div class="input-daterange input-group" id="kt_datepicker_5">
                            @Html.DropDownListFor(modelItem => item.SelectedDate, item.SetupTeamStaffWorkDays, "gün Seç", new { @class = "form-control" })
                            <div class="input-group-append">
                                <span class="input-group-text">
                                    <i class="la la-ellipsis-h"></i>
                                </span>
                            </div>
                            @Html.DropDownListFor(modelItem => item.SelectedTime, new SelectList(""), "saat Seç", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="d-flex justify-content-between align-items-center my-4">
                        <span class="text-dark-75 font-weight-bolder mr-2"></span>
                        <a href="#" class="btn btn-sm btn-outline-success font-weight-bold">Görevi Ata</a>
                    </div>
                </div>
                <hr class="my-10 bg-secondary">
            }
        }
    </div>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-light-primary font-weight-bold" data-dismiss="modal">Kapat</button>
</div>


@*@using (Html.BeginForm("UpdateTaskStatus", "Setup", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h3>@View.UpdateTaskStatus</h3>

    <div>
        @Html.DropDownListFor(m => m.FaultCodes, (SelectList)ViewBag.FaultTypes, View.SelectFaultType, new { @class = "form-control", id = "FaultCodesDrowndown" })
        @Html.ValidationMessageFor(m => m.FaultCodes, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.EditorFor(m => m.Description)
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    if ((User.IsInRole("SetupManager") && !User.IsInRole("RendezvousTeam")))
    {
        <input type="file" name="file" id="file-button" />
    }

    @Html.ActionLink(View.Back, "CustomerDetail", "Setup", new { taskNo = Model.TaskNo }, new { @class = "btn btn-info", @id = "form-button" })

    if ((User.IsInRole("Admin") || User.IsInRole("RendezvousTeam")) && Model.StaffId != null)
    {
        foreach (var item in Model.StaffCalendar)
            {
                <div><input value="saatlerine bak" name="@item" type="button" class="staff-work-days" /></div>
                <div>@Html.DisplayFor(modelItem => item)</div>
            }
    }
    <div class="staff-work-hours-container"></div>

    <input type="submit" id="form-button" class=" btn btn-warning" value="@View.Update" />

    @Html.HiddenFor(m => m.TaskNo)
    @Html.HiddenFor(m => m.StaffId)
    @Html.HiddenFor(m => m.SelectedDate)
    @Html.HiddenFor(m => m.SelectedTime)
}

@section JavaScript{
    <script>
        $(document).ready(function () {
            var value = $('#FaultCodesDrowndown').val();
            if (value == '9') {//Rendezvous Made
                $('#RezervationDate').show();
            } else {
                $('#RezervationDate').hide();
            }
        });

        $('#FaultCodesDrowndown').change(function () {
            var value = $(this).val();
            if (value == '9') {//Rendezvous Made
                $('#RezervationDate').show();
            } else {
                $('#RezervationDate').hide();
            }
        });

        $(".staff-work-days").click(function () {

            var getButtonValue = $(this).attr("name");
            var staffId = $("#StaffId").attr("value");
            $("#SelectedDate").attr("value", getButtonValue);
            $("#SelectedTime").attr("value", null);
            $(".staff-work-hours-container").children().remove();

            var postData = { date:getButtonValue , staffId:staffId};

            $.ajax({
                    url: '@Url.Action("GetStaffAvailableHours", "Setup")',
                    type: "POST",
                    dataType: "json",
                    data: postData,
                    complete: function (data, status) {
                        if (status == "success") {
                            var area = $(".staff-work-hours-container");
                            $.each(data.responseJSON.list, function (item,value) {
                                area.append("<input value='" + value + "' name='" + value + "' type='button' class='staff-work-hours'/>");
                            })
                        }
                        else {
                            console.log("Failed Get Staff Hours");
                        }
                    }
                });
        });



        $(".staff-work-hours-container").on('click', '.staff-work-hours', function () {
            var getButtonValue = $(this).attr("name");
            $("#SelectedTime").attr("value", getButtonValue);
        });


    </script>
}*@