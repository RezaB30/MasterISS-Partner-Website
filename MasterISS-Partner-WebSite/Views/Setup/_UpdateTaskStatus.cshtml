@using MasterISS_Partner_WebSite.Localization
@using MasterISS_Partner_WebSite.ViewModels.Setup
@model AddTaskStatusUpdateViewModel
@{
}
<div class="modal-header">
    <div class="py-2">
        <span class="text-dark-75 font-weight-bolder d-block font-size-h5">@View.ChangeSetupTeam</span>
        <span class="text-muted font-size-lg">@Html.DisplayFor(m => m.ContactName)</span>
    </div>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki font-size-h5 ki-close"></i>
    </button>
</div>



<div class="modal-body genericContainer">
    <div data-scroll="true" data-height="300">
        <!--begin::Info-->
        @using (Ajax.BeginForm("UpdateTaskStatus", "Setup", new AjaxOptions { HttpMethod = "POST", OnComplete = "GenericResult" }))
        {
            @Html.DropDownListFor(m => m.FaultCodes, (SelectList)ViewBag.FaultTypes, View.SelectFaultType, new { @class = "form-control FaultCodesDrowndownByUpdateTaskStatus" })

            <div class="error-codes-container" style="display:none">
                <div class="separator separator-dashed mt-2 my-4"></div>
                <div class="text-danger error-codes" align="center"></div>
                <div class="separator separator-dashed mt-2 my-4"></div>
            </div>

            @Html.HiddenFor(m => m.TaskNo)
            <div class="form-group my-8 mb-1">
                @Html.LabelFor(m => m.Description, new { @class = "text-muted font-size-lg" })
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @rows = "3", id = "description" })
            </div>

            <div class="form-group my-8 mb-1 selectedSetupTeamContainer" style="display:none">
                @Html.LabelFor(m => m.SelectedSetupTeam, new { @class = "text-muted font-size-lg" })
                @Html.DropDownListFor(m => m.SelectedSetupTeam, (SelectList)ViewBag.SuitableSetupTeam, View.Select, new { @class = "form-control" })
            </div>

            if ((SelectList)ViewBag.SuitableSetupTeam == null)
            {
                <div class="separator separator-dashed mt-2 my-4"></div>
                <div class="text-danger" align="center">@View.NotFoundSetupTeamForThisTask</div>
                <div class="separator separator-dashed mt-2 my-4"></div>
            }

            <div class="selectedSetupTeamUserInfo">

            </div>


            @*foreach (var item in Model.SetupTeamStaffsToMatchedTheTask)
                {
                        <div class="mb-7 assignTaskButtonContainer">

                            <div class="setupTeamWorkAreasContainer" style="display:none">

                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-dark-75 font-weight-bolder mr-6">@Html.DisplayNameFor(modelItem => item.SetupTeamStaffName)</span>
                                    <a href="#" class="text-info text-hover-primary">@Html.DisplayFor(modelItem => item.SetupTeamStaffName)</a>
                                </div>
                                <div class="d-flex justify-content-between align-items-center my-1 mt-5">
                                    <span class="text-dark-75 font-weight-bolder mr-2">@Html.DisplayNameFor(modelItem => item.SetupTeamStaffWorkAreas)</span>
                                    <span class="text-info text-hover-primary mt-1" style="text-align:right">
                                        @if (item.SetupTeamStaffWorkAreas != null)
                                        {
                                            foreach (var workArea in item.SetupTeamStaffWorkAreas)
                                            {
                                                @Html.DisplayFor(workAreaItem => workArea.ProvinceName)
                                                if (!string.IsNullOrEmpty(workArea.DistrictName))
                                                {
                                                    <span></span>
                                                }
                                                @Html.DisplayFor(workAreaItem => workArea.DistrictName)
                                                if (!string.IsNullOrEmpty(workArea.RuralName))
                                                {
                                                    <span></span>
                                                }
                                                @Html.DisplayFor(workAreaItem => workArea.RuralName)
                                                if (!string.IsNullOrEmpty(workArea.NeigborhoodName))
                                                {
                                                    <span></span>
                                                }
                                                @Html.DisplayFor(workAreaItem => workArea.NeigborhoodName)<br />
                                            }
                                        }
                                    </span>
                                </div>

                                <div class="col-lg-12 my-8">
                                    <span class="form-text text-info my-2">@View.ChooseAnAppointmentDate</span>
                                    <div class="input-daterange input-group" id="kt_datepicker_5">
                                        @Html.DropDownListFor(modelItem => item.SelectedDate, new SelectList(""), View.Select, new { @class = "form-control setupTeamWorkDays", @dataValue = item.SetupTeamStaffId })
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="la la-ellipsis-h"></i>
                                            </span>
                                        </div>
                                        @Html.DropDownListFor(modelItem => item.SelectedTime, new SelectList(""), View.Select, new { @class = "form-control setupTeamWorkHours", @dataValue = item.SetupTeamStaffId })
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between align-items-center my-4">
                                    <span class="text-dark-75 font-weight-bolder mr-2"></span>
                                    <input type="button" class="btn btn-sm btn-outline-success font-weight-bold assignTaskSetupTeamButton" dataValue="@item.SetupTeamStaffId" value="@View.AssignTheTask" />
                                </div>
                                <hr class="my-10 bg-secondary">
                            </div>
                        </div>
                    }*@
            <input type="submit" class="btn btn-sm btn-outline-success font-weight-bold assignTaskButton" value="@View.Submit" />
        }
    </div>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-light-primary font-weight-bold" data-dismiss="modal">@View.Close</button>
</div>
