@using MasterISS_Partner_WebSite.ViewModels.Home
@using MasterISS_Partner_WebSite.Localization
@model AddCustomerViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="background-color:red">
    @ViewBag.NewCustomerError
</div>
@using (Html.BeginForm("NewCustomer", "Customer", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div id="IDCardInfoContainer">
        <h2>IDCardInfo</h2>
        <div>
            @Html.LabelFor(m => m.IDCard.BirthDate)
            @Html.EditorFor(m => m.IDCard.BirthDate)
            @Html.ValidationMessageFor(m => m.IDCard.BirthDate)
        </div>

        <div>
            @Html.LabelFor(m => m.IDCard.CardTypeId)
            @Html.DropDownListFor(m => m.IDCard.CardTypeId, (SelectList)ViewBag.TckTypeList, BillView.Select)
            @Html.ValidationMessageFor(m => m.IDCard.CardTypeId)
        </div>

        <div>
            @Html.LabelFor(m => m.IDCard.FirstName)
            @Html.EditorFor(m => m.IDCard.FirstName)
            @Html.ValidationMessageFor(m => m.IDCard.FirstName)
        </div>

        <div>
            @Html.LabelFor(m => m.IDCard.LastName)
            @Html.EditorFor(m => m.IDCard.LastName)
            @Html.ValidationMessageFor(m => m.IDCard.LastName)
        </div>

        <div>
            @Html.LabelFor(m => m.IDCard.PassportNo)
            @Html.EditorFor(m => m.IDCard.PassportNo)
            @Html.ValidationMessageFor(m => m.IDCard.PassportNo)
        </div>

        <div>
            @Html.LabelFor(m => m.IDCard.SerialNo)
            @Html.EditorFor(m => m.IDCard.SerialNo)
            @Html.ValidationMessageFor(m => m.IDCard.SerialNo)
        </div>

        <div>
            @Html.LabelFor(m => m.IDCard.TCKNo)
            @Html.EditorFor(m => m.IDCard.TCKNo)
            @Html.ValidationMessageFor(m => m.IDCard.TCKNo)
        </div>

        <div id="TCBirthCertificateContainer" style="display:none">

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.DateOfIssue)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.DateOfIssue)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.DateOfIssue)
            </div>

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.District)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.District)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.District)
            </div>

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.Neighbourhood)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.Neighbourhood)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.Neighbourhood)
            </div>

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.PageNo)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.PageNo)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.PageNo)
            </div>

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.PlaceOfIssue)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.PlaceOfIssue)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.PlaceOfIssue)
            </div>

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.Province)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.Province)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.Province)
            </div>

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.RowNo)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.RowNo)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.RowNo)
            </div>

            <div>
                @Html.LabelFor(m => m.IDCard.TCBirthCertificate.VolumeNo)
                @Html.EditorFor(m => m.IDCard.TCBirthCertificate.VolumeNo)
                @Html.ValidationMessageFor(m => m.IDCard.TCBirthCertificate.VolumeNo)
            </div>

        </div>

        <div id="TCIDCardWithChipContainer" style="display:none">
            @Html.LabelFor(m => m.IDCard.TCIDCardWithChip.ExpiryDate)
            @Html.EditorFor(m => m.IDCard.TCIDCardWithChip.ExpiryDate)
            @Html.ValidationMessageFor(m => m.IDCard.TCIDCardWithChip.ExpiryDate)
        </div>

    </div>

    <div id="CustomerGeneralInfoContainer">
        <h2>CustomerGeneralInfo</h2>

        <div>
            @Html.LabelFor(gi => gi.GeneralInfo.SameSetupAddressByBilling)
            @Html.EditorFor(gi => gi.GeneralInfo.SameSetupAddressByBilling)
        </div>

        <h4>BillingAddress</h4>
        <div id="BillingAddressContainer">
            <div>
                @Html.DropDownListFor(gi => gi.GeneralInfo.BillingAddress.ProvinceId, (SelectList)ViewBag.ProvincesByGeneralInfo, HomeView.SelectProvince, new { @id = "province-billing" })
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.ProvinceId)
            </div>

            <div>
                @Html.DropDownListFor(gi => gi.GeneralInfo.BillingAddress.DistrictId, (SelectList)ViewBag.DistrictsByGeneralInfo, HomeView.SelectDistrict, new { @id = "district-billing", @disabled = "disabled" })
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.DistrictId)
            </div>

            <div>
                @Html.DropDownListFor(gi => gi.GeneralInfo.BillingAddress.RuralRegionsId, (SelectList)ViewBag.RuralRegionsByGeneralInfo, HomeView.SelectRegions, new { @id = "ruralregions-billing", @disabled = "disabled" })
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.RuralRegionsId)
            </div>

            <div>
                @Html.DropDownListFor(gi => gi.GeneralInfo.BillingAddress.NeighborhoodId, (SelectList)ViewBag.NeigboorHoodsByGeneralInfo, HomeView.SelectNeigborhood, new { @id = "neighborhood-billing", @disabled = "disabled" })
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.NeighborhoodId)
            </div>

            <div>
                @Html.DropDownListFor(gi => gi.GeneralInfo.BillingAddress.StreetId, (SelectList)ViewBag.StreetsByGeneralInfo, HomeView.SelectStreet, new { @id = "street-billing", @disabled = "disabled" })
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.StreetId)
            </div>

            <div>
                @Html.DropDownListFor(gi => gi.GeneralInfo.BillingAddress.BuildingId, (SelectList)ViewBag.BuildingsByGeneralInfo, HomeView.SelectBuilding, new { @id = "building-billing", @disabled = "disabled" })
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.BuildingId)
            </div>

            <div>
                @Html.DropDownListFor(gi => gi.GeneralInfo.BillingAddress.ApartmentId, (SelectList)ViewBag.ApartmentsByGeneralInfo, HomeView.SelectApartment, new { @id = "apartment-billing", @disabled = "disabled" })
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.ApartmentId)
            </div>

            <div>
                @Html.LabelFor(gi => gi.GeneralInfo.BillingAddress.PostalCode)
                @Html.EditorFor(gi => gi.GeneralInfo.BillingAddress.PostalCode)
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.PostalCode)
            </div>

            <div>
                @Html.LabelFor(gi => gi.GeneralInfo.BillingAddress.Floor)
                @Html.EditorFor(gi => gi.GeneralInfo.BillingAddress.Floor)
                @Html.ValidationMessageFor(gi => gi.GeneralInfo.BillingAddress.Floor)
            </div>
        </div>

        <div>
            @Html.LabelFor(m => m.GeneralInfo.ContactPhoneNo)
            @Html.EditorFor(m => m.GeneralInfo.ContactPhoneNo)
            @Html.ValidationMessageFor(m => m.GeneralInfo.ContactPhoneNo)
        </div>

        <div>
            @Html.LabelFor(m => m.GeneralInfo.Email)
            @Html.EditorFor(m => m.GeneralInfo.Email)
            @Html.ValidationMessageFor(m => m.GeneralInfo.Email)
        </div>

        <div>
            @Html.LabelFor(m => m.GeneralInfo.CustomerTypeId)
            @Html.DropDownListFor(m => m.GeneralInfo.CustomerTypeId, (SelectList)ViewBag.CustomerTypeList, "Seç")
            @Html.ValidationMessageFor(m => m.GeneralInfo.CustomerTypeId)
        </div>

        <div>
            @Html.LabelFor(m => m.GeneralInfo.Culture)
            @Html.DropDownListFor(m => m.GeneralInfo.Culture, (SelectList)ViewBag.CultureList, BillView.Select)
            @Html.ValidationMessageFor(m => m.GeneralInfo.Culture)
        </div>
        <input type="button" id="createNumberInput" value="başka telefon ekle" />
        <div id="telephoneNumberInputContainer"></div>
    </div>

    <div id="corporateCustomerInfoContainer" style="display:none">
        <h2>CorporateCustomerInfo</h2>
        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.CentralSystemNo)
            @Html.EditorFor(ci => ci.CorporateInfo.CentralSystemNo)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.CentralSystemNo)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveBirthPlace)
            @Html.EditorFor(ci => ci.CorporateInfo.ExecutiveBirthPlace)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveBirthPlace)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveFathersName)
            @Html.EditorFor(ci => ci.CorporateInfo.ExecutiveFathersName)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveFathersName)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveMothersMaidenName)
            @Html.EditorFor(ci => ci.CorporateInfo.ExecutiveMothersMaidenName)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveMothersMaidenName)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveMothersName)
            @Html.EditorFor(ci => ci.CorporateInfo.ExecutiveMothersName)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveMothersName)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveNationalityId)
            @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveNationalityId, (SelectList)ViewBag.NationalityListByCorporative, BillView.Select)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveNationalityId)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveProfessionId)
            @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveProfessionId, (SelectList)ViewBag.ProfessionListByCorporative, BillView.Select)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveProfessionId)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveSexId)
            @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveSexId, (SelectList)ViewBag.SexexListByCorporative, BillView.Select)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveSexId)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.TaxNo)
            @Html.EditorFor(ci => ci.CorporateInfo.TaxNo)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.TaxNo)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.TaxOffice)
            @Html.EditorFor(ci => ci.CorporateInfo.TaxOffice)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.TaxOffice)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.Title)
            @Html.EditorFor(ci => ci.CorporateInfo.Title)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.Title)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.TradeRegistrationNo)
            @Html.EditorFor(ci => ci.CorporateInfo.TradeRegistrationNo)
            @Html.ValidationMessageFor(ci => ci.CorporateInfo.TradeRegistrationNo)
        </div>

        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.SameSetupAddressByCorporativeResidencyAddress)
            @Html.EditorFor(ci => ci.CorporateInfo.SameSetupAddressByCorporativeResidencyAddress)
        </div>

        <h4>ExecutiveResidencyAddress</h4>
        <div id="ExecutiveResidencyContainer">
            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.ProvinceId, (SelectList)ViewBag.ProvincesByCorporativeResidency, HomeView.SelectProvince, new { @id = "province" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.ProvinceId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.DistrictId, (SelectList)ViewBag.DistrictsByCorporativeResidency, HomeView.SelectDistrict, new { @id = "district", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.DistrictId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.RuralRegionsId, (SelectList)ViewBag.RuralRegionsByCorporativeResidency, HomeView.SelectRegions, new { @id = "ruralregions", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.RuralRegionsId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.NeighborhoodId, (SelectList)ViewBag.NeigboorHoodsByCorporativeResidency, HomeView.SelectNeigborhood, new { @id = "neighborhood", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.NeighborhoodId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.StreetId, (SelectList)ViewBag.StreetsByCorporativeResidency, HomeView.SelectStreet, new { @id = "street", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.StreetId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.BuildingId, (SelectList)ViewBag.BuildingsByCorporativeResidency, HomeView.SelectBuilding, new { @id = "building", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.BuildingId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.ApartmentId, (SelectList)ViewBag.ApartmentsByCorporativeResidency, HomeView.SelectApartment, new { @id = "apartment", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.ApartmentId)
            </div>

            <div>
                @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.PostalCode)
                @Html.EditorFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.PostalCode)
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.PostalCode)
            </div>

            <div>
                @Html.LabelFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.Floor)
                @Html.EditorFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.Floor)
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.ExecutiveResidencyAddress.Floor)
            </div>

        </div>


        <div>
            @Html.LabelFor(ci => ci.CorporateInfo.SameSetupAddressByCorporativeCompanyAddress)
            @Html.EditorFor(ci => ci.CorporateInfo.SameSetupAddressByCorporativeCompanyAddress)
        </div>

        <h4>CompanyAddress</h4>
        <div id="CompanyContainer">
            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.CompanyAddress.ProvinceId, (SelectList)ViewBag.ProvincesByCorporativeCompany, HomeView.SelectProvince, new { @id = "province-company" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.ProvinceId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.CompanyAddress.DistrictId, (SelectList)ViewBag.DistrictsByCorporativeCompany, HomeView.SelectDistrict, new { @id = "district-company", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.DistrictId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.CompanyAddress.RuralRegionsId, (SelectList)ViewBag.RuralRegionsByCorporativeCompany, HomeView.SelectRegions, new { @id = "ruralregions-company", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.RuralRegionsId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.CompanyAddress.NeighborhoodId, (SelectList)ViewBag.NeigboorHoodsByCorporativeCompany, HomeView.SelectNeigborhood, new { @id = "neighborhood-company", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.NeighborhoodId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.CompanyAddress.StreetId, (SelectList)ViewBag.StreetsByCorporativeCompany, HomeView.SelectStreet, new { @id = "street-company", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.StreetId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.CompanyAddress.BuildingId, (SelectList)ViewBag.BuildingsByCorporativeCompany, HomeView.SelectBuilding, new { @id = "building-company", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.BuildingId)
            </div>

            <div>
                @Html.DropDownListFor(ci => ci.CorporateInfo.CompanyAddress.ApartmentId, (SelectList)ViewBag.ApartmentsByCorporativeCompany, HomeView.SelectApartment, new { @id = "apartment-company", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.ApartmentId)
            </div>

            <div>
                @Html.LabelFor(ci => ci.CorporateInfo.CompanyAddress.PostalCode)
                @Html.EditorFor(ci => ci.CorporateInfo.CompanyAddress.PostalCode)
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.PostalCode)
            </div>

            <div>
                @Html.LabelFor(ci => ci.CorporateInfo.CompanyAddress.Floor)
                @Html.EditorFor(ci => ci.CorporateInfo.CompanyAddress.Floor)
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.Floor)
            </div>
        </div>

    </div>

    <div id="individualCustomerInfoContainer" style="display:none">
        <h2>IndividualCustomerInfo</h2>

        <div>
            @Html.LabelFor(m => m.Individual.BirthPlace)
            @Html.EditorFor(m => m.Individual.BirthPlace)
            @Html.ValidationMessageFor(m => m.Individual.BirthPlace)
        </div>

        <div>
            @Html.LabelFor(m => m.Individual.FathersName)
            @Html.EditorFor(m => m.Individual.FathersName)
            @Html.ValidationMessageFor(m => m.Individual.FathersName)
        </div>

        <div>
            @Html.LabelFor(m => m.Individual.MothersMaidenName)
            @Html.EditorFor(m => m.Individual.MothersMaidenName)
            @Html.ValidationMessageFor(m => m.Individual.MothersMaidenName)
        </div>

        <div>
            @Html.LabelFor(m => m.Individual.MothersName)
            @Html.EditorFor(m => m.Individual.MothersName)
            @Html.ValidationMessageFor(m => m.Individual.MothersName)
        </div>

        <div>
            @Html.LabelFor(m => m.Individual.NationalityId)
            @Html.DropDownListFor(m => m.Individual.NationalityId, (SelectList)ViewBag.NationalityListByIndividual, BillView.Select)
            @Html.ValidationMessageFor(m => m.Individual.NationalityId)
        </div>

        <div>
            @Html.LabelFor(m => m.Individual.ProfessionId)
            @Html.DropDownListFor(m => m.Individual.ProfessionId, (SelectList)ViewBag.ProfessionListByIndividual, BillView.Select)
            @Html.ValidationMessageFor(m => m.Individual.ProfessionId)
        </div>

        <div>
            @Html.LabelFor(m => m.Individual.SexId)
            @Html.DropDownListFor(m => m.Individual.SexId, (SelectList)ViewBag.SexexListByIndividual, BillView.Select)
            @Html.ValidationMessageFor(m => m.Individual.SexId)
        </div>

        <div>
            @Html.LabelFor(m => m.Individual.SameSetupAddressByIndividual)
            @Html.EditorFor(m => m.Individual.SameSetupAddressByIndividual)
        </div>

        <h4>IndividualResidencyAddress</h4>
        <div id="IndividualResidencyContainer">
            <div>
                @Html.DropDownListFor(ii => ii.Individual.ResidencyAddress.ProvinceId, (SelectList)ViewBag.ProvincesByIndividual, HomeView.SelectProvince, new { @id = "province-individual" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.ApartmentId)
            </div>

            <div>
                @Html.DropDownListFor(ii => ii.Individual.ResidencyAddress.DistrictId, (SelectList)ViewBag.DistrictsByIndividual, HomeView.SelectDistrict, new { @id = "district-individual", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.DistrictId)
            </div>

            <div>
                @Html.DropDownListFor(ii => ii.Individual.ResidencyAddress.RuralRegionsId, (SelectList)ViewBag.RuralRegionsByIndividual, HomeView.SelectRegions, new { @id = "ruralregions-individual", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.RuralRegionsId)
            </div>

            <div>
                @Html.DropDownListFor(ii => ii.Individual.ResidencyAddress.NeighborhoodId, (SelectList)ViewBag.NeigboorHoodsByIndividual, HomeView.SelectNeigborhood, new { @id = "neighborhood-individual", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.NeighborhoodId)
            </div>

            <div>
                @Html.DropDownListFor(ii => ii.Individual.ResidencyAddress.StreetId, (SelectList)ViewBag.StreetsByIndividual, HomeView.SelectStreet, new { @id = "street-individual", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.StreetId)
            </div>

            <div>
                @Html.DropDownListFor(ii => ii.Individual.ResidencyAddress.BuildingId, (SelectList)ViewBag.BuildingsByIndividual, HomeView.SelectBuilding, new { @id = "building-individual", @disabled = "disabled" })
                @Html.ValidationMessageFor(ci => ci.CorporateInfo.CompanyAddress.BuildingId)
            </div>

            <div>
                @Html.DropDownListFor(ii => ii.Individual.ResidencyAddress.ApartmentId, (SelectList)ViewBag.ApartmentsByIndividual, HomeView.SelectApartment, new { @id = "apartment-individual", @disabled = "disabled" })
                @Html.ValidationMessageFor(ii => ii.Individual.ResidencyAddress.ApartmentId)
            </div>

            <div>
                @Html.LabelFor(ii => ii.Individual.ResidencyAddress.PostalCode)
                @Html.EditorFor(ii => ii.Individual.ResidencyAddress.PostalCode)
                @Html.ValidationMessageFor(ii => ii.Individual.ResidencyAddress.PostalCode)
            </div>

            <div>
                @Html.LabelFor(ii => ii.Individual.ResidencyAddress.Floor)
                @Html.EditorFor(ii => ii.Individual.ResidencyAddress.Floor)
                @Html.ValidationMessageFor(ii => ii.Individual.ResidencyAddress.Floor)
            </div>

        </div>


    </div>

    <div id="SubscriptionInfoContainer">
        <h2>SubscriptionInfo</h2>

        <div>
            @Html.LabelFor(m => m.SubscriptionInfo.PartnerTariffID)
            @Html.DropDownListFor(m => m.SubscriptionInfo.PartnerTariffID, (SelectList)ViewBag.PartnerTariffList, "Seç", new { @id = "partnerTariffId" })
            @Html.ValidationMessageFor(m => m.SubscriptionInfo.PartnerTariffID)
        </div>

        <div>
            @Html.LabelFor(m => m.SubscriptionInfo.BillingPeriodId)
            @Html.DropDownListFor(m => m.SubscriptionInfo.BillingPeriodId, (SelectList)ViewBag.BillingPeriod, BillView.Select, new { @disabled = "disabled", @id = "billingPeriodId" })
            @Html.ValidationMessageFor(m => m.SubscriptionInfo.BillingPeriodId)
        </div>

        <h4>SetupAddress</h4>
        <div id="SetupAddressContainer">
            <div>
                @Html.DropDownListFor(si => si.SubscriptionInfo.SetupAddress.ProvinceId, (SelectList)ViewBag.ProvincesBySetup, HomeView.SelectProvince, new { @id = "province-setup" })
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.ProvinceId)
            </div>

            <div>
                @Html.DropDownListFor(si => si.SubscriptionInfo.SetupAddress.DistrictId, (SelectList)ViewBag.DistrictsBySetup, HomeView.SelectDistrict, new { @id = "district-setup", @disabled = "disabled" })
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.DistrictId)
            </div>

            <div>
                @Html.DropDownListFor(si => si.SubscriptionInfo.SetupAddress.RuralRegionsId, (SelectList)ViewBag.RuralRegionsBySetup, HomeView.SelectRegions, new { @id = "ruralregions-setup", @disabled = "disabled" })
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.RuralRegionsId)
            </div>

            <div>
                @Html.DropDownListFor(si => si.SubscriptionInfo.SetupAddress.NeighborhoodId, (SelectList)ViewBag.NeigboorHoodsBySetup, HomeView.SelectNeigborhood, new { @id = "neighborhood-setup", @disabled = "disabled" })
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.NeighborhoodId)
            </div>

            <div>
                @Html.DropDownListFor(si => si.SubscriptionInfo.SetupAddress.StreetId, (SelectList)ViewBag.StreetsBySetup, HomeView.SelectStreet, new { @id = "street-setup", @disabled = "disabled" })
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.StreetId)
            </div>

            <div>
                @Html.DropDownListFor(si => si.SubscriptionInfo.SetupAddress.BuildingId, (SelectList)ViewBag.BuildingsBySetup, HomeView.SelectBuilding, new { @id = "building-setup", @disabled = "disabled" })
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.BuildingId)
            </div>

            <div>
                @Html.DropDownListFor(si => si.SubscriptionInfo.SetupAddress.ApartmentId, (SelectList)ViewBag.ApartmentsBySetup, HomeView.SelectApartment, new { @id = "apartment-setup", @disabled = "disabled" })
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.ApartmentId)
            </div>

            <div>
                @Html.LabelFor(si => si.SubscriptionInfo.SetupAddress.PostalCode)
                @Html.EditorFor(si => si.SubscriptionInfo.SetupAddress.PostalCode)
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.PostalCode)
            </div>

            <div>
                @Html.LabelFor(si => si.SubscriptionInfo.SetupAddress.Floor)
                @Html.EditorFor(si => si.SubscriptionInfo.SetupAddress.Floor)
                @Html.ValidationMessageFor(si => si.SubscriptionInfo.SetupAddress.Floor)
            </div>

        </div>

    </div>

    <input type="submit" value="ekle" />
}


@section Javascript{
    <script>
        function CheckValidAndHideContainer(checkId,containerId) {
            if ($(checkId).is(':checked')) {
                $(containerId).hide();
            }
            else {
                $(containerId).show();
            }
        }

        $(document).ready(function () {

            $("#IDCard_CardTypeId").change(function () {
                var tckType = $(this).find(":selected").val();
                if (tckType == "1") {//This Is TCIDCardWithChip
                    $("#TCBirthCertificateContainer").hide();
                    $("#TCIDCardWithChipContainer").show();
                }
                else {
                    $("#TCBirthCertificateContainer").show();
                    $("#TCIDCardWithChipContainer").hide();
                }
            });

            CheckValidAndHideContainer("#GeneralInfo_SameSetupAddressByBilling", "#BillingAddressContainer")
            $("#GeneralInfo_SameSetupAddressByBilling").change(function () {
                CheckValidAndHideContainer(this, "#BillingAddressContainer")
            });

            CheckValidAndHideContainer("#Individual_SameSetupAddressByIndividual", "#IndividualResidencyContainer")
            $("#Individual_SameSetupAddressByIndividual").change(function () {
                CheckValidAndHideContainer(this, "#IndividualResidencyContainer")
            });

            CheckValidAndHideContainer("#CorporateInfo_SameSetupAddressByCorporativeResidencyAddress", "#ExecutiveResidencyContainer")
            $("#CorporateInfo_SameSetupAddressByCorporativeResidencyAddress").change(function () {
                CheckValidAndHideContainer(this, "#ExecutiveResidencyContainer")
            });

            CheckValidAndHideContainer("#CorporateInfo_SameSetupAddressByCorporativeCompanyAddress", "#CompanyContainer")
            $("#CorporateInfo_SameSetupAddressByCorporativeCompanyAddress").change(function () {
                CheckValidAndHideContainer(this, "#CompanyContainer")
            });

            $("#GeneralInfo_CustomerTypeId").change(function () {
                var value = $("#GeneralInfo_CustomerTypeId option:selected").val();
                if (value=="1") {
                    $("#corporateCustomerInfoContainer").hide();
                    $("#individualCustomerInfoContainer").show();
                }
                else if (value == "") {
                    $("#corporateCustomerInfoContainer").hide();
                    $("#individualCustomerInfoContainer").hide();
                }
                else {
                    $("#corporateCustomerInfoContainer").show();
                    $("#individualCustomerInfoContainer").hide();
                }
            });


            $('#createNumberInput').click(function () {
                $('#telephoneNumberInputContainer').append('<input type="button" id="remove-button" value="sh">');
                $('#telephoneNumberInputContainer').append('<input type="text" name="GeneralInfo.OtherPhoneNos" id="GeneralInfo_OtherPhoneNos">');
                $('#telephoneNumberInputContainer').append('<br/>');
            });

            QueryAddress("#province-company","#district-company",'@Url.Action("DistrictList", "Home")')

            QueryAddress("#district-company", "#ruralregions-company", '@Url.Action("RuralRegionsList", "Home")')

            QueryAddress("#ruralregions-company","#neighborhood-company",'@Url.Action("NeighborhoodList", "Home")')

            QueryAddress("#neighborhood-company","#street-company",'@Url.Action("StreetList", "Home")')

            QueryAddress("#street-company","#building-company",'@Url.Action("BuildingList", "Home")')

            QueryAddress("#building-company", "#apartment-company", '@Url.Action("ApartmentList", "Home")')

            /////////////////////////////////////////////////////////////////////////////////////

            QueryAddress("#province","#district",'@Url.Action("DistrictList", "Home")')

            QueryAddress("#district", "#ruralregions", '@Url.Action("RuralRegionsList", "Home")')

            QueryAddress("#ruralregions","#neighborhood",'@Url.Action("NeighborhoodList", "Home")')

            QueryAddress("#neighborhood","#street",'@Url.Action("StreetList", "Home")')

            QueryAddress("#street","#building",'@Url.Action("BuildingList", "Home")')

            QueryAddress("#building", "#apartment", '@Url.Action("ApartmentList", "Home")')

            /////////////////////////////////////////////////////////////////////////////////////

            QueryAddress("#province-billing","#district-billing",'@Url.Action("DistrictList", "Home")')

            QueryAddress("#district-billing", "#ruralregions-billing", '@Url.Action("RuralRegionsList", "Home")')

            QueryAddress("#ruralregions-billing","#neighborhood-billing",'@Url.Action("NeighborhoodList", "Home")')

            QueryAddress("#neighborhood-billing","#street-billing",'@Url.Action("StreetList", "Home")')

            QueryAddress("#street-billing","#building-billing",'@Url.Action("BuildingList", "Home")')

            QueryAddress("#building-billing","#apartment-billing",'@Url.Action("ApartmentList", "Home")')

            ///////////////////////////////////////////////////////////////////////////////////////////////

            QueryAddress("#province-individual", "#district-individual", '@Url.Action("DistrictList", "Home")')

            QueryAddress("#district-individual", "#ruralregions-individual", '@Url.Action("RuralRegionsList", "Home")')

            QueryAddress("#ruralregions-individual","#neighborhood-individual",'@Url.Action("NeighborhoodList", "Home")')

            QueryAddress("#neighborhood-individual","#street-individual",'@Url.Action("StreetList", "Home")')

            QueryAddress("#street-individual","#building-individual",'@Url.Action("BuildingList", "Home")')

            QueryAddress("#building-individual","#apartment-individual",'@Url.Action("ApartmentList", "Home")')

            ///////////////////////////////////////////////////////////////////////////////////////////////

            QueryAddress("#province-setup", "#district-setup", '@Url.Action("DistrictList", "Home")')

            QueryAddress("#district-setup", "#ruralregions-setup", '@Url.Action("RuralRegionsList", "Home")')

            QueryAddress("#ruralregions-setup","#neighborhood-setup",'@Url.Action("NeighborhoodList", "Home")')

            QueryAddress("#neighborhood-setup","#street-setup",'@Url.Action("StreetList", "Home")')

            QueryAddress("#street-setup","#building-setup",'@Url.Action("BuildingList", "Home")')

            QueryAddress("#building-setup","#apartment-setup",'@Url.Action("ApartmentList", "Home")')

            ///////////////////////////////////////////////////////////////////////////////////////////////

            $("#partnerTariffId").change(function () {

                $("#billingPeriodId").find("option").not(":first").remove();

                $("#billingPeriodId").attr("disabled", "disabled")


                var id = $("#partnerTariffId").find(":selected").val();

                    if (id != "") {
                        var selectId = { "id": id }
                        $.ajax({
                            url: '@Url.Action("PaymentDayList", "Customer")',
                            type: 'POST',
                            dataType: 'JSON',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify(selectId),
                            complete: function (data, status) {
                                if (status == "success") {
                                    var result = data.responseJSON.list;
                                    for (var i = 0; i < result.length; i++) {
                                        $("#billingPeriodId").append($('<option>', {
                                            value: result[i].Value,
                                            text: result[i].Name,
                                        }));
                                    }
                                    $("#billingPeriodId").attr("disabled", false)
                                }
                                else {
                                    console.log(data.responseJSON.errorMessage);
                                }
                            }
                        });
                    }
            });

            var billingPeriodSelect = $("#billingPeriodId").find(":selected").val();
            if (billingPeriodSelect  != "") {
                $("#billingPeriodId").attr("disabled", false);
            }

            var cardTypeSelect = $("#IDCard_CardTypeId").find(":selected").val();
            if (cardTypeSelect != "") {
                $("#IDCard_CardTypeId").trigger('change');
            }

            var customerTypeSelect = $("#GeneralInfo_CustomerTypeId").find(":selected").val();
            if (customerTypeSelect != "") {
                $("#GeneralInfo_CustomerTypeId").trigger('change');
            }

        });
    </script>
}