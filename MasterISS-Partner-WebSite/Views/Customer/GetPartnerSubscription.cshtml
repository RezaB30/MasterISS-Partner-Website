@using PagedList.Mvc
@using MasterISS_Partner_WebSite.Localization
@using MasterISS_Partner_WebSite.Helpers
@using MasterISS_Partner_WebSite.ViewModels
@using RadiusR.DB.Enums
@model  PagedList.StaticPagedList<GetPartnerSubscriptionListViewModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var search = ViewBag.Search as PartnerSubscriptionFilterViewModel ?? new PartnerSubscriptionFilterViewModel();
}

<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <!--begin::Subheader-->
    <div class="subheader py-2 py-lg-6 subheader-transparent" id="kt_subheader">
        <div class="container">
            @using (Html.BeginForm("GetPartnerSubscription", "Customer", FormMethod.Get, new { @class = "mb-15 my-8" }))
            {
                <div class="row mb-8">
                    <div class="col-lg-2 mb-lg-0 mb-6">
                        @Html.LabelFor(m => search.SearchedName)
                        @Html.TextBox("SearchedName", search.SearchedName, new { @placeholder = Html.DisplayNameFor(m => search.SearchedName), @class = "form-control datatable-input", @data_col_index = "1" })
                    </div>
                    <div class="col-lg-2 mb-lg-0 mb-6">
                        @Html.LabelFor(m => search.SearchedSubsNo)
                        @Html.Editor("SearchedSubsNo", new { htmlAttributes = new { @class = "form-control datatable-input", @data_col_index = "4", @type = "text" } })
                    </div>
                    <div class="col-lg-2 mb-lg-0 mb-6">
                        @Html.LabelFor(m => search.SearchedCustomerStatus)
                        @Html.DropDownList("SearchedCustomerStatus", (SelectList)ViewBag.CustomerState, View.Select, new { @class = "form-control datatable-input", @data_col_index = "2" })
                    </div>

                </div>
                <div class="text-danger mb-4" align="center">
                    <span style="font-size:1.5em">@Html.Raw(TempData["GetSelectedAttachmentErrorMessage"])</span>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <button type="submit" class="btn btn-primary btn-primary--icon" id="kt_search">
                            <span>
                                <i class="la la-search"></i>
                                <span>@View.Filter</span>
                            </span>
                        </button>&nbsp;&nbsp;
                        <a href="@Url.Action("GetPartnerSubscription","Customer")" class="btn btn-secondary btn-secondary--icon" id="kt_reset">
                            <span>
                                <i class="la la-close"></i>
                                <span>@View.Reset</span>
                            </span>
                        </a>
                    </div>
                </div>
            }
            @if (ViewBag.ErrorMessage == null && ViewBag.Error == null)
            {
                <div class="row">
                    @foreach (var item in Model)
                    {
                        <div class="col-xl-4">
                            <!--begin::Card-->
                            <div class="card card-custom gutter-b card-stretch">
                                <div class=" ribbon ribbon-left">
                                    @if (item.StateValue == (int)CustomerState.Active)
                                    {
                                        <div class="ribbon-target bg-success" style="top: 10px; left: -2px;">@Html.DisplayFor(modelItem => item.StateName)</div>
                                    }
                                    else if (item.StateValue == (int)CustomerState.Cancelled)
                                    {
                                        <div class="ribbon-target bg-danger" style="top: 10px; left: -2px;">@Html.DisplayFor(modelItem => item.StateName)</div>
                                    }
                                    else if (item.StateValue == (int)CustomerState.PreRegisterd)
                                    {
                                        <div class="ribbon-target bg-warning" style="top: 10px; left: -2px;">@Html.DisplayFor(modelItem => item.StateName)</div>
                                    }
                                    else
                                    {
                                        <div class="ribbon-target bg-info" style="top: 10px; left: -2px;">@Html.DisplayFor(modelItem => item.StateName)</div>
                                    }
                                </div>                                                    <!--begin::Body-->
                                <div class="card-body pt-4 d-flex flex-column justify-content-between">
                                    <!--begin::Toolbar-->

                                    <div class="d-flex justify-content-end">

                                        <div class="dropdown dropdown-inline" data-toggle="tooltip" title="" data-placement="left" data-original-title="Quick actions">
                                            @if (item.StateValue == (int)CustomerState.PreRegisterd)
                                            {
                                                <a href="#" class="btn btn-clean btn-hover-light-primary btn-sm btn-icon" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="ki ki-bold-more-hor"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-md dropdown-menu-right">
                                                    <!--begin::Navigation-->
                                                    <ul class="navi navi-hover">
                                                        <li class="navi-header font-weight-bold py-4">
                                                            <span class="font-size-lg">@View.OperationMenu</span>
                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                <i aria-hidden="true" class="ki font-size-h5 ki-close"></i>
                                                            </button>
                                                        </li>
                                                        <li class="navi-separator mb-3 opacity-70"></li>
                                                        <li class="navi-item">
                                                            <div class="navi-link">
                                                                <span class="navi-text" data-toggle="modal" data-target="#examplegetCustomerAttachment">
                                                                    <input class="btn-sm btn btn-block btn-outline-info customer-attachment-info-button" dataValue="@item.SubscriptionId" value="@View.CustomerDocuments" />
                                                                </span>
                                                            </div>
                                                        </li>
                                                        <li class="navi-item">
                                                            <div class="navi-link">
                                                                <span class="navi-text" data-toggle="modal" data-target="#examplegetCustomerAttachment">
                                                                    <input class="btn-sm btn btn-block btn-outline-info customer-forms-info-button" dataValue="@item.SubscriptionId" value="@View.CustomerForms" />
                                                                </span>
                                                            </div>
                                                        </li>
                                                        <li class="navi-item">
                                                            <div class="navi-link">
                                                                <span class="navi-text" data-toggle="modal" data-target="#examplegetCustomerAttachment">
                                                                    <input class="btn-sm btn btn-block btn-outline-info upload-document-customer" dataValue="@item.SubscriptionId" value="@View.UploadDocument" />
                                                                </span>
                                                            </div>
                                                        </li>

                                                    </ul> <!--end::Navigation-->
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="btn btn-sm btn-icon" style="cursor:context-menu"></span>
                                            }
                                        </div>

                                    </div> <!--end::Toolbar--> <!--begin::User-->
                                    <div class="d-flex align-items-center my-4 mb-2">

                                        <!--begin::Title-->
                                        <div class="d-flex flex-column">

                                            <span class=" font-weight-bold text-hover-primary font-size-h5 mb-0">@Html.DisplayFor(modelItem => item.DisplayName)</span>
                                        </div>
                                        <!--end::Title-->
                                    </div>
                                    <div class="separator separator-dashed mt-2 my-2"></div> <!--end::User--> <!--begin::Info-->
                                    <div class="d-flex mb-2">
                                        <span class="text-dark-50 flex-root font-weight-bold">@Html.DisplayNameFor(model => model.FirstOrDefault().SubscriberNo)</span>
                                        <span class="text-dark flex-root font-weight-bold">@Html.DisplayFor(modelItem => item.SubscriberNo)</span>
                                    </div>
                                    <div class="d-flex mb-2">
                                        <span class="text-dark-50 flex-root font-weight-bold">@Html.DisplayNameFor(model => model.FirstOrDefault().MembershipDate)</span>
                                        <span class="text-dark flex-root font-weight-bold">@Html.DisplayFor(modelItem => item.MembershipDate)</span>
                                    </div>
                                    @if (item.StateValue == (int)CustomerState.PreRegisterd)
                                    {
                                        <div class="separator separator-dashed mt-1 my-2"></div>
                                        <div class="d-flex mb-2">
                                            <span class="text-dark-50 flex-root font-weight-bold">@Html.DisplayNameFor(model => model.FirstOrDefault().TotalUploadedDocument)</span>
                                            <span class="text-danger flex-root font-weight-bold">@Html.DisplayFor(modelItem => item.TotalUploadedDocument)</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div> <!--end::Info--> <!--end::Card Body-->
            }
            else
            {
                <div align="center">
                    <div class="text-danger">
                        <span>@ViewBag.ErrorMessage</span>
                        <span>@ViewBag.DateFormatIsNotCorrect</span>
                        <span>@ViewBag.StartTimeBiggerThanEndTime</span>
                    </div>
                </div>
            }

            @if (Model != null && Model.TotalItemCount > 0)
            {
                <div class="card card-custom">
                    <div class="card-body py-7">
                        <!--begin::Pagination-->
                        <div class="d-flex justify-content-between align-items-center flex-wrap">
                            <div class="d-flex flex-wrap mr-3">
                                @Html.PagedListPager(Model, page => Url.Action("GetPartnerSubscription", "Customer", new
                           {
                               page = page,
                           }),
                           new PagedListRenderOptions
                           {
                           })
                            </div>
                            <div class="d-flex align-items-center">
                                <span class="text-muted"> @View.Total @Model.TotalItemCount @View.RecordFound @View.OnThisPage @Model.FirstItemOnPage @View.To @Model.LastItemOnPage @View.Showing</span>
                            </div>
                        </div>
                        <!--end:: Pagination-->
                    </div>
                </div>
            }
        </div>
    </div>

</div>
<div class="modal fade" id="examplegetCustomerAttachment" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div id="GetCustomerAttachmentContainer">
            </div>
        </div>

    </div>
</div>

@section Javascript{
    @Scripts.Render("~/Scripts/get-partner-subscription-page-js")
<script>
        $("#GetCustomerAttachmentContainer").on('change', '#AttachmentType', function () {
            $("#previews").show();
            var deleteButtonName = "@View.Delete";
            var successResponseUrl = '@Url.Action("GetPartnerSubscription", "Customer")';
            GetDropzone(deleteButtonName, successResponseUrl);
        });

        $(".customer-attachment-info-button").click(function () {
            var dataValue = $(this).attr("dataValue");
            var ajaxDataValue = { subscriptionId: dataValue };
            var url = '@Url.Action("GetPartnerClientAttachments", "Customer")';
            var container = $("#GetCustomerAttachmentContainer");

            AjaxRequestTypeGetAndReturnHTML(ajaxDataValue, url, container);
        });

        $(".customer-forms-info-button").click(function () {
            var dataValue = $(this).attr("dataValue");
            var ajaxDataValue = { subscriptionId: dataValue };
            var url = '@Url.Action("GetPartnerClientForms", "Customer")';
            var container = $("#GetCustomerAttachmentContainer");

            AjaxRequestTypeGetAndReturnHTML(ajaxDataValue, url, container);
        });

        $(".upload-document-customer").click(function () {
            var dataValue = $(this).attr("dataValue");
            var ajaxDataValue = { subscriptionId: dataValue };
            var url = '@Url.Action("UploadDocumentCustomer", "Customer")';
            var container = $("#GetCustomerAttachmentContainer");

            AjaxRequestTypeGetAndReturnHTML(ajaxDataValue, url, container);
        });

        function UploadDocumentCustomerResult(data, status) {
            if (status = "success") {
                var responseStatus = data.responseJSON.status;
                if (responseStatus == "Success") {
                    var message = data.responseJSON.message;
                    var url='@Url.Action("GetPartnerSubscription", "Customer")';
                    GetAlert(message, "true",url);
                }
                else if (responseStatus =="FailedAndRedirect") {
                    var redirectMessage = data.responseJSON.ErrorMessage;
                    var urlHome='@Url.Action("Index", "Home")';
                    GetAlert(redirectMessage, "false", urlHome);
                }
                else {
                    $(".error-codes-container").show();
                    $(".error-codes").html(data.responseJSON.ErrorMessage);
                }
            }
            else {
                console.log("Error");
            }
        }
</script>
}