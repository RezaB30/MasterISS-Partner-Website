<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Executive Address</value>
  </data>
  <data name="AllowanceStateName" xml:space="preserve">
    <value>Allowance State</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="BalanceAmount" xml:space="preserve">
    <value>Balance Amount</value>
  </data>
  <data name="BBK" xml:space="preserve">
    <value>BBK</value>
  </data>
  <data name="BBKAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="BillingAddress" xml:space="preserve">
    <value>Billing Address</value>
  </data>
  <data name="BillingPeriodId" xml:space="preserve">
    <value>Billing Period</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="BirthPlace" xml:space="preserve">
    <value>Birth Place</value>
  </data>
  <data name="CardTypeId" xml:space="preserve">
    <value>Card Type</value>
  </data>
  <data name="CentralSystemNo" xml:space="preserve">
    <value>Central System Number</value>
  </data>
  <data name="CompanyAddress" xml:space="preserve">
    <value>Company Address</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="ContactPhoneNo" xml:space="preserve">
    <value>Contact Phone No</value>
  </data>
  <data name="CultureCustomer" xml:space="preserve">
    <value>Culture</value>
  </data>
  <data name="CustomerCode" xml:space="preserve">
    <value>Customer Code</value>
  </data>
  <data name="CustomerTCK" xml:space="preserve">
    <value>Turkish Identity Number</value>
  </data>
  <data name="CustomerTypeId" xml:space="preserve">
    <value>Customer Type</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateOfIssue" xml:space="preserve">
    <value>Date Of Issue</value>
  </data>
  <data name="DealerCode" xml:space="preserve">
    <value>Dealer Code</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Infrastructure Distance</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="Domain" xml:space="preserve">
    <value>Domain</value>
  </data>
  <data name="DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="ExecutiveBirthPlace" xml:space="preserve">
    <value>Executive Birth Place</value>
  </data>
  <data name="ExecutiveFathersName" xml:space="preserve">
    <value>Executive Fathers Name</value>
  </data>
  <data name="ExecutiveMothersMaidenName" xml:space="preserve">
    <value>Executive Mothers Maiden Surname</value>
  </data>
  <data name="ExecutiveMothersName" xml:space="preserve">
    <value>Executive Mothers Name</value>
  </data>
  <data name="ExecutiveName" xml:space="preserve">
    <value>Executive Name</value>
  </data>
  <data name="ExecutiveNationalityId" xml:space="preserve">
    <value>Executive Nationality</value>
  </data>
  <data name="ExecutivePhoneNo" xml:space="preserve">
    <value>Executive Phone No</value>
  </data>
  <data name="ExecutiveProfessionId" xml:space="preserve">
    <value>Executive Profession</value>
  </data>
  <data name="ExecutiveResidencyAddress" xml:space="preserve">
    <value>Executive Residency Address</value>
  </data>
  <data name="ExecutiveSexId" xml:space="preserve">
    <value>Executive Sex</value>
  </data>
  <data name="ExecutiveSurname" xml:space="preserve">
    <value>Executive Surname</value>
  </data>
  <data name="ExpiryDate" xml:space="preserve">
    <value>Expiry Date</value>
  </data>
  <data name="FathersName" xml:space="preserve">
    <value>Fathers Name</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Floor" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="HasInfrastructure" xml:space="preserve">
    <value>Is There Infrastructure</value>
  </data>
  <data name="IsEnabled" xml:space="preserve">
    <value>Is Enabled?</value>
  </data>
  <data name="ISPCode" xml:space="preserve">
    <value>ISPCode</value>
  </data>
  <data name="IssueDate" xml:space="preserve">
    <value>Issue Date</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MothersMaidenName" xml:space="preserve">
    <value>Mothers Maiden Name</value>
  </data>
  <data name="MothersName" xml:space="preserve">
    <value>Mothers Name</value>
  </data>
  <data name="NationalityId" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="Neighbourhood" xml:space="preserve">
    <value>Neighbourhood</value>
  </data>
  <data name="OtherPhoneNos" xml:space="preserve">
    <value>Other Phone Numbers</value>
  </data>
  <data name="PageNo" xml:space="preserve">
    <value>Page No</value>
  </data>
  <data name="PartnerTariffID" xml:space="preserve">
    <value>Partner Tariff</value>
  </data>
  <data name="PassportNo" xml:space="preserve">
    <value>Passport Number</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PhoneNo" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PlaceOfIssue" xml:space="preserve">
    <value>Place Of Issue</value>
  </data>
  <data name="PortState" xml:space="preserve">
    <value>Port State</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="ProfessionId" xml:space="preserve">
    <value>Profession</value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>Province</value>
  </data>
  <data name="PSTN" xml:space="preserve">
    <value>PSTN</value>
  </data>
  <data name="RegisterDatetime" xml:space="preserve">
    <value>Register Date</value>
  </data>
  <data name="ResidencyAddress" xml:space="preserve">
    <value>Residency Address</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="RowNo" xml:space="preserve">
    <value>Row Number</value>
  </data>
  <data name="SameSetupAddress" xml:space="preserve">
    <value>Same as the Setup Address</value>
  </data>
  <data name="SerialNo" xml:space="preserve">
    <value>Serial No</value>
  </data>
  <data name="SetupAddress" xml:space="preserve">
    <value>Setup Address</value>
  </data>
  <data name="SexId" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="SubscriberNo" xml:space="preserve">
    <value>Subscriber Number</value>
  </data>
  <data name="TaxNo" xml:space="preserve">
    <value>Tax Number</value>
  </data>
  <data name="TaxOffice" xml:space="preserve">
    <value>Tax Office</value>
  </data>
  <data name="TCKNo" xml:space="preserve">
    <value>Turkish Identity Number</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TotalCredit" xml:space="preserve">
    <value>Total Credit</value>
  </data>
  <data name="TradeRegistrationNo" xml:space="preserve">
    <value>Trade Registration Number</value>
  </data>
  <data name="UserEmail" xml:space="preserve">
    <value>User E-Mail</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UserNameSurname" xml:space="preserve">
    <value>User Name and Surname</value>
  </data>
  <data name="VolumeNo" xml:space="preserve">
    <value>Volume Number</value>
  </data>
  <data name="VUID" xml:space="preserve">
    <value>VUID</value>
  </data>
</root>